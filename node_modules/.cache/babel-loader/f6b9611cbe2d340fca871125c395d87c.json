{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Documentos/MeusProjetos/Projetos-Trybe/front-end/sd-016-b-project-trivia-react-redux/src/pages/Trivia.jsx\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport Question from '../components/Question';\nimport { addLocalStorage } from '../localStorage';\n\nclass Trivia extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.callback = () => {\n      const {\n        results\n      } = this.props;\n      this.setState({\n        questions: results\n      });\n    };\n\n    this.handleTimer = () => {};\n\n    this.state = {\n      questions: []\n    };\n    this.callback = this.callback.bind(this);\n  }\n\n  componentDidMount() {\n    this.callback();\n    addLocalStorage('score', 0);\n  }\n\n  render() {\n    const {\n      state: {\n        questions\n      },\n      props: {\n        index,\n        history\n      }\n    } = this;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      id: \"trivia\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), questions.length > 0 && /*#__PURE__*/React.createElement(Question, {\n      result: questions[index],\n      index: index,\n      history: history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }));\n  }\n\n}\n\nTrivia.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  index: PropTypes.number.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  results: state.questions.resultApi.results,\n  index: state.questions.index\n});\n\nexport default connect(mapStateToProps)(Trivia);","map":{"version":3,"sources":["/home/bruno/Documentos/MeusProjetos/Projetos-Trybe/front-end/sd-016-b-project-trivia-react-redux/src/pages/Trivia.jsx"],"names":["PropTypes","React","connect","Header","Question","addLocalStorage","Trivia","Component","constructor","props","callback","results","setState","questions","handleTimer","state","bind","componentDidMount","render","index","history","length","propTypes","arrayOf","object","isRequired","number","mapStateToProps","resultApi"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,eAAT,QAAgC,iBAAhC;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,QAfmB,GAeR,MAAM;AACf,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKF,KAAzB;AACA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEF;AAAb,OAAd;AACD,KAlBkB;;AAAA,SAmBrBG,WAnBqB,GAmBR,MAAI,CAEhB,CArBoB;;AAGjB,SAAKC,KAAL,GAAa;AACXF,MAAAA,SAAS,EAAE;AADA,KAAb;AAIA,SAAKH,QAAL,GAAgB,KAAKA,QAAL,CAAcM,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,QAAL;AACAL,IAAAA,eAAe,CAAC,OAAD,EAAU,CAAV,CAAf;AACD;;AASDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,KAAK,EAAE;AAAEF,QAAAA;AAAF,OAAT;AAAwBJ,MAAAA,KAAK,EAAE;AAAEU,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAA/B,QAAsD,IAA5D;AAEA,wBACE;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEIP,SAAS,CAACQ,MAAV,GAAmB,CAAnB,iBACC,oBAAC,QAAD;AAEH,MAAA,MAAM,EAAGR,SAAS,CAACM,KAAD,CAFf;AAGH,MAAA,KAAK,EAAGA,KAHL;AAIH,MAAA,OAAO,EAAGC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHL,CADF;AAWD;;AArCkC;;AAwCrCd,MAAM,CAACgB,SAAP,GAAmB;AACjBX,EAAAA,OAAO,EAAEX,SAAS,CAACuB,OAAV,CAAkBvB,SAAS,CAACwB,MAA5B,EAAoCC,UAD5B;AAEjBN,EAAAA,KAAK,EAAEnB,SAAS,CAAC0B,MAAV,CAAiBD,UAFP;AAGjBL,EAAAA,OAAO,EAAEpB,SAAS,CAACwB,MAAV,CAAiBC;AAHT,CAAnB;;AAMA,MAAME,eAAe,GAAIZ,KAAD,KAAY;AAClCJ,EAAAA,OAAO,EAAEI,KAAK,CAACF,SAAN,CAAgBe,SAAhB,CAA0BjB,OADD;AAElCQ,EAAAA,KAAK,EAAEJ,KAAK,CAACF,SAAN,CAAgBM;AAFW,CAAZ,CAAxB;;AAKA,eAAejB,OAAO,CAACyB,eAAD,CAAP,CAAyBrB,MAAzB,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport Question from '../components/Question';\nimport { addLocalStorage } from '../localStorage';\n\nclass Trivia extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      questions: [],\n    };\n\n    this.callback = this.callback.bind(this);\n  }\n\n  componentDidMount() {\n    this.callback();\n    addLocalStorage('score', 0);\n  }\n\n  callback = () => {\n    const { results } = this.props;\n    this.setState({ questions: results });\n  }\nhandleTimer =()=>{\n\n}\n  render() {\n    const { state: { questions }, props: { index, history } } = this;\n\n    return (\n      <main id=\"trivia\">\n        <Header />\n        { questions.length > 0\n        && <Question\n         \n        result={ questions[index] } \n        index={ index } \n        history={ history } /> }\n      </main>\n    );\n  }\n}\n\nTrivia.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  index: PropTypes.number.isRequired,\n  history: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  results: state.questions.resultApi.results,\n  index: state.questions.index,\n});\n\nexport default connect(mapStateToProps)(Trivia);\n"]},"metadata":{},"sourceType":"module"}