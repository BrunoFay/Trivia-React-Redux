{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Documentos/MeusProjetos/Projetos-Trybe/front-end/sd-016-b-project-trivia-react-redux/src/components/Header.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\nimport { addHash } from '../redux/actions';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const {\n      email,\n      hashDispatch\n    } = this.props;\n    const hash = md5(email).toString();\n    hashDispatch(hash);\n  }\n\n  render() {\n    const {\n      props: {\n        name,\n        score,\n        timer,\n        hash\n      }\n    } = this;\n    return /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://www.gravatar.com/avatar/${hash}`,\n      alt: \"avatar\",\n      \"data-testid\": \"header-profile-picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-player-name\",\n      id: \"name-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, name)), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"timer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, timer), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"Score:\"), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"score-num\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, ' ', score)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  name: state.player.name,\n  email: state.player.gravatarEmail,\n  score: state.player.score,\n  timer: state.questions.timer,\n  hash: state.hash\n});\n\nconst mapDispatchToProps = dispatch => ({\n  hashDispatch: hash => dispatch(addHash(hash))\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  hashDispatch: PropTypes.func.isRequired,\n  timer: PropTypes.number.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/home/bruno/Documentos/MeusProjetos/Projetos-Trybe/front-end/sd-016-b-project-trivia-react-redux/src/components/Header.js"],"names":["PropTypes","React","Component","md5","connect","addHash","Header","constructor","props","componentDidMount","email","hashDispatch","hash","toString","render","name","score","timer","mapStateToProps","state","player","gravatarEmail","questions","mapDispatchToProps","dispatch","propTypes","string","isRequired","number","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\nimport { addHash } from '../redux/actions';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n  \n  }\n\n  componentDidMount() {\n    const { email, hashDispatch } = this.props;\n    const hash = md5(email).toString();\n\n    hashDispatch(hash);\n  }\n\n\n  render() {\n    const {  props: { name, score, timer,hash } } = this;\n\n    return (\n      <header>\n        <div id=\"user\">\n          <img\n            src={ `https://www.gravatar.com/avatar/${hash}` }\n            alt=\"avatar\"\n            data-testid=\"header-profile-picture\"\n          />\n          <span\n            data-testid=\"header-player-name\"\n            id=\"name-header\"\n          >\n            {name}\n          </span>\n        </div>\n        <span id=\"timer\">{timer}</span>\n        <span data-testid=\"header-score\">\n          <span id=\"score\">Score:</span>\n          <span id=\"score-num\">\n            {' '}\n            {score}\n          </span>\n        </span>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  email: state.player.gravatarEmail,\n  score: state.player.score,\n  timer: state.questions.timer,\n  hash:state.hash\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  hashDispatch: (hash) => dispatch(addHash(hash)),\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  hashDispatch: PropTypes.func.isRequired,\n  timer: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}