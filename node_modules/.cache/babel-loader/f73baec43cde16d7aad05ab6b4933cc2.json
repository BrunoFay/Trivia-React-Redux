{"ast":null,"code":"var _jsxFileName = \"/home/bruno/Documentos/MeusProjetos/Projetos-Trybe/front-end/sd-016-b-project-trivia-react-redux/src/components/RankingCard.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { BsTrophy } from 'react-icons/bs';\nimport { FaMedal } from 'react-icons/fa';\nimport { RiMedalLine } from 'react-icons/ri';\nexport default class RankingCard extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.switchFunction = posi => {\n      switch (posi) {\n        case 1:\n          return /*#__PURE__*/React.createElement(BsTrophy, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 11,\n              columnNumber: 16\n            }\n          });\n\n        case 2:\n          return /*#__PURE__*/React.createElement(FaMedal, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 16\n            }\n          });\n\n        case 3:\n          return /*#__PURE__*/React.createElement(RiMedalLine, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 16\n            }\n          });\n\n        default:\n          return null;\n      }\n    };\n  }\n\n  render() {\n    const {\n      picture,\n      key,\n      name,\n      score,\n      position\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: `rank${position}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, this.switchFunction(position), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \" #\", position)), /*#__PURE__*/React.createElement(\"img\", {\n      src: picture,\n      alt: \"gravatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"id-rank\",\n      \"data-testid\": `player-name-${key}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, name), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"\",\n      \"data-testid\": `player-score-${key}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, score));\n  }\n\n}\nRankingCard.propTypes = {\n  key: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  position: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/home/bruno/Documentos/MeusProjetos/Projetos-Trybe/front-end/sd-016-b-project-trivia-react-redux/src/components/RankingCard.js"],"names":["PropTypes","React","Component","BsTrophy","FaMedal","RiMedalLine","RankingCard","switchFunction","posi","render","picture","key","name","score","position","props","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,eAAe,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SACjDK,cADiD,GAC/BC,IAAD,IAAU;AACzB,cAAQA,IAAR;AACE,aAAK,CAAL;AACE,8BAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AACF,aAAK,CAAL;AACE,8BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AACF,aAAK,CAAL;AACE,8BAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AACF;AACE,iBAAO,IAAP;AARJ;AAWD,KAbgD;AAAA;;AAcjDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,GAAX;AAAgBC,MAAAA,IAAhB;AAAsBC,MAAAA,KAAtB;AAA6BC,MAAAA;AAA7B,QAA0C,KAAKC,KAArD;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAG,OAAMD,QAAS,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,cAAL,CAAoBO,QAApB,CADH,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAUA,QAAV,CAHF,CADF,eAME;AAAK,MAAA,GAAG,EAAEJ,OAAV;AAAmB,MAAA,GAAG,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE;AAAM,MAAA,EAAE,EAAC,SAAT;AAAmB,qBAAc,eAAcC,GAAI,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuDC,IAAvD,CAPF,eAQE;AAAM,MAAA,EAAE,EAAC,EAAT;AAAY,qBAAc,gBAAeD,GAAI,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDE,KAAjD,CARF,CADF;AAYD;;AA7BgD;AAgCnDP,WAAW,CAACU,SAAZ,GAAwB;AACtBL,EAAAA,GAAG,EAAEX,SAAS,CAACiB,MAAV,CAAiBC,UADA;AAEtBN,EAAAA,IAAI,EAAEZ,SAAS,CAACmB,MAAV,CAAiBD,UAFD;AAGtBR,EAAAA,OAAO,EAAEV,SAAS,CAACmB,MAAV,CAAiBD,UAHJ;AAItBL,EAAAA,KAAK,EAAEb,SAAS,CAACiB,MAAV,CAAiBC,UAJF;AAKtBJ,EAAAA,QAAQ,EAAEd,SAAS,CAACiB,MAAV,CAAiBC;AALL,CAAxB","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { BsTrophy } from 'react-icons/bs';\nimport { FaMedal } from 'react-icons/fa';\nimport { RiMedalLine } from 'react-icons/ri';\n\nexport default class RankingCard extends Component {\n  switchFunction = (posi) => {\n    switch (posi) {\n      case 1:\n        return <BsTrophy />;\n      case 2:\n        return <FaMedal />\n      case 3:\n        return <RiMedalLine />\n      default:\n        return null;\n    }\n\n  }\n  render() {\n    const { picture, key, name, score, position } = this.props;\n\n    return (\n      <div>\n        <div id={`rank${position}`}>\n          {this.switchFunction(position)}\n         \n          <span > #{position}</span>\n        </div>\n        <img src={picture} alt=\"gravatar\" />\n        <span id='id-rank' data-testid={`player-name-${key}`}>{name}</span>\n        <span id='' data-testid={`player-score-${key}`}>{score}</span>\n      </div>\n    );\n  }\n}\n\nRankingCard.propTypes = {\n  key: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  picture: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  position: PropTypes.number.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}