{"ast":null,"code":"import { CLEAN_STATE, NEXT_QUESTION, SAVE_QUESTIONS } from '../actions';\nconst INITIAL_STATE = {\n  resultApi: {},\n  index: 0\n};\nconst maxLength = 4;\n\nconst questions = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case NEXT_QUESTION:\n      return { ...state,\n        index: state.index < maxLength && state.index + 1\n      };\n\n    case SAVE_QUESTIONS:\n      return { ...state,\n        resultApi: action.questions\n      };\n\n    case CLEAN_STATE:\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nexport default questions;","map":{"version":3,"sources":["/home/bruno/Documentos/MeusProjetos/Projetos-Trybe/front-end/sd-016-b-project-trivia-react-redux/src/redux/reducers/questions.js"],"names":["CLEAN_STATE","NEXT_QUESTION","SAVE_QUESTIONS","INITIAL_STATE","resultApi","index","maxLength","questions","state","action","type"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,aAAtB,EAAqCC,cAArC,QAA2D,YAA3D;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,KAAK,EAAE;AAFa,CAAtB;AAKA,MAAMC,SAAS,GAAG,CAAlB;;AAEA,MAAMC,SAAS,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BL,aAA0B;AAAA,MAAXM,MAAW;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKT,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAcC,SAAd,IAA2BE,KAAK,CAACH,KAAN,GAAc;AAF3C,OAAP;;AAIF,SAAKH,cAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,SAAS,EAAEK,MAAM,CAACF;AAFb,OAAP;;AAIF,SAAKP,WAAL;AACE,aAAOG,aAAP;;AACF;AACE,aAAOK,KAAP;AAdF;AAgBD,CAjBD;;AAmBA,eAAeD,SAAf","sourcesContent":["import { CLEAN_STATE, NEXT_QUESTION, SAVE_QUESTIONS } from '../actions';\n\nconst INITIAL_STATE = {\n  resultApi: {},\n  index: 0,\n};\n\nconst maxLength = 4;\n\nconst questions = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case NEXT_QUESTION:\n    return {\n      ...state,\n      index: state.index < maxLength && state.index + 1,\n    };\n  case SAVE_QUESTIONS:\n    return {\n      ...state,\n      resultApi: action.questions,\n    };\n  case CLEAN_STATE:\n    return INITIAL_STATE;\n  default:\n    return state;\n  }\n};\n\nexport default questions;\n"]},"metadata":{},"sourceType":"module"}